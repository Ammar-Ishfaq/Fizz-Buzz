(k) := 左からk番目のメモリの値
(0) : n=対象とする数を0になるまでデクリメントする場所
(1) : 割る数m、ずっと保持
(2) : id1のコピー

n k k でmodkの判定ができる
,>+++>+++<<
n; 3 3

[
    破壊空間の初期化
    ->>->[-]>[-]>[-]<<<
    nm1 3 2; 0 0 0

    (3) = (4) = (2) and (2) = 0
    [->+>+<<]>>
    nm1 3 0 2 2; 0

    (2) = (4) and (4) = 0
    [-<<+>>]<
    nm1 3 2 2; 0 0

    (4) = booleanization_(3) and (3) = 0
    [[-]>+<]>
    nm1 3 2 0 1; 0

    (5) = boolean_inversion_(4) and (4) = 0
    >+<[[-]>-<]>
    nm1 3 2 0 0 0;

    if id5=true id2 = id1
    if (5) == true
        (2) copy_(1) using (1) (2) (3)
    [
        <<<<
        [->+>+<<]>>[-<<+>>]>>-
    ]
    nm1 3 
    <<<<<
]
>
[->-<]+>[[-]<->]<
>+<
[->-<

Yes 89 101 115
10×(9 10 11)


++++++++++
[>>>>
+++++[<++<++<++>>>-]
<+<<-<-
]
90 100 110 to 89 101 115
>-.>+.>+++++.

Reset
[-]<[-]<[-]<



]

>[-
No 78 111
11×(7 10)

++++++++++ +
[>>>
* 9 9
+++[<+++<+++>>-]
* 7 10
<+<--<-
]
77 110 to 78 111
>+.>+.

Reset
[-]<[-]<

]<
